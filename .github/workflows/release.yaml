name: Publish release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  github-releases:
    runs-on: ubuntu-20.04
    outputs:
      image: ${{ steps.check_tag.outputs.image }}
    steps: 
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Check Tag
        id: check_tag
        shell: bash
        run: |
          tag=${GITHUB_REF##*/}
          if [[ "$tag" =~ [0-9]+.[0-9]+.[0-9]+$ ]]; then
            echo "::set-output name=image::deernetwork/deer-node:latest,deernetwork/deer-node:$tag"
            echo "::set-output name=tag::$tag"
            echo "::set-output name=rc::false"
          else
            echo "::set-output name=image::deernetwork/deer-node:dev"
            echo "::set-output name=rc::true"
          fi
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-11
          override: true
          target: wasm32-unknown-unknown
      - name: Build release
        run: cargo build --release
      - uses: actions/upload-artifact@v2
        with:
          name: deer-node
          path: target/release/deer-node
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: ${{ steps.check_tag.outputs.rc }}
          files: |
            target/release/deer-node
            target/release/wbuild/deer-runtime/deer_runtime.compact.wasm 

  docker-hub:
    runs-on: ubuntu-20.04
    needs: ["github-releases"]
    steps:
      - run: echo "Build image ${{ needs.github-releases.outputs.image }}"
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: deer-node
          path: ${{ github.workspace }}/target/release/
      - run: chmod +x ${{ github.workspace }}/target/release/deer-node
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ needs.github-releases.outputs.image }}
