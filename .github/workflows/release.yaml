name: Publish release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]

jobs:
  github-releases:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-07-03
          override: true
          target: wasm32-unknown-unknown
      - name: Build release
        run: cargo build --release
      - uses: actions/upload-artifact@v2
        with:
          name: deer-node
          path: target/release/deer-node
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: |
            target/release/deer-node
            target/release/wbuild/deer-runtime/deer_runtime.compact.wasm 

  docker-hub:
    runs-on: ubuntu-20.04
    needs: ["github-releases"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: deer-node
          path: target/release/
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          # push: true
          tags: deernetwork/deer-node:latest,deernetwork/deer-node:${{ steps.get_version.outputs.VERSION }}